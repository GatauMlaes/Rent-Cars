<div class="content-wrapper">
    <div class="container-xxl flex-grow-1 container-p-y">
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="card-body" id="content">
                        <canvas id="myChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>


<script>
    const content = document.getElementById("content")
    const total_data = `<%= data.cars.length%>`

    if(total_data == 0 ){
        content.innerHTML=`    
        <div class="container-xxl flex-grow-1 container-p-y">
        <div class="row">
            <div class="col">
                <div class="card">
                    <div class="d-flex align-items-end row">
                      <div class="col-sm-7">
                        <div class="card-body">
                          <h5 class="card-title text-primary">Your Data is Empty , <%= result.name %>! ðŸŽ‰</h5>
                          <p class="mb-4">
                            Start your business by managing your client data, and adding cars for rental
                          </p>
        
                          <a href="/Kelompok-3/seller/dashboard/add-cars/<%= result.id %>" class="btn btn-sm btn-outline-primary">Start</a>
                        </div>
                      </div>
                      <div class="col-sm-5 text-center text-sm-left">
                        <div class="card-body pb-0 px-0 px-md-4">
                          <img src="/img/illustrations/man.png" height="140" alt="View Badge User" data-app-dark-img="illustrations/man-with-laptop-dark.png" data-app-light-img="illustrations/man-with-laptop-light.png">
                        </div>
                      </div>
                    </div>
                  </div>
            </div>
        </div>
    </div>`
    } else {
            (async function () {
            function groupAndSumByYear(data) {
                const groupedData = {};

                data.forEach(item => {
                    const { year, count } = item;
                    if (!groupedData[year]) {
                        groupedData[year] = 0;
                    }
                    groupedData[year] += count;
                });

                const result = Object.keys(groupedData).map(year => ({
                    year: parseInt(year),
                    count: groupedData[year],
                }));

                return result;
            }
            const raw_data = [
                { year: 2010, count: 10 },
                { year: 2011, count: 20 },
                { year: 2012, count: 15 },
                { year: 2013, count: 25 },
                { year: 2014, count: 22 },
                { year: 2015, count: 30 },
                { year: 2016, count: 28 },
                { year: 2010, count: 10 },
                { year: 2011, count: 20 },
                { year: 2012, count: 15 },
                { year: 2013, count: 25 },
                { year: 2014, count: 22 },
                { year: 2015, count: 30 },
                { year: 2016, count: 28 },
                { year: 2010, count: 10 },
                { year: 2011, count: 20 },
                { year: 2012, count: 15 },
                { year: 2013, count: 25 },
                { year: 2014, count: 22 },
                { year: 2015, count: 30 },
                { year: 2016, count: 28 },
            ];
            const data = groupAndSumByYear(raw_data)
            const bar = {
                type: 'bar',
                data: {
                    labels: data.map(row => row.year),
                    datasets: [
                        {
                            label: 'Acquisitions by year',
                            data: data.map(row => row.count),
                            borderColor: '#36A2EB',
                            backgroundColor: '#9BD0F5',
                        },
                        {
                            label: 'Acquisitions by year',
                            data: data.map(row => row.count),
                            borderColor: '#36A2EB',
                            backgroundColor: '#9BD0F5',
                        }
                    ]
                }
            }
            const line = {
                type: 'line',
                data: {
                    labels: data.map(row => row.year),
                    datasets: [
                        {
                            label: 'Acquisitions by year',
                            data: data.map(row => row.count),
                            borderColor: '#36A2EB',
                            backgroundColor: '#9BD0F5',
                        }
                    ]
                }
            }


            new Chart(
                document.getElementById('myChart'), bar
            );
        })();
    }


</script>